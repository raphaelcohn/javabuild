#!/usr/bin/env sh
# This file is part of javabuild. It is subject to the licence terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/javabuild/master/COPYRIGHT. No part of javabuild, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.
# Copyright Â© 2014-2015 The developers of javabuild. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/javabuild/master/COPYRIGHT.


_program()
{   
	core_usesIn javabuild
    javabuild()
    {
		javabuild_initialise
		javabuild_createTemporaryLocations
		javabuild_clean
		
		_javabuild_callback()
		{
			local moduleName="$core_variable_array_element"
			javabuild_crossCompileModule "$moduleName"
		}
		core_variable_array_iterate	javabuild_moduleNames _javabuild_callback
    }
}

_program_path_find()
{
    if [ "${_program_fattening_program_path+set}" = 'set' ]; then
        printf '%s\n' "$_program_fattening_program_path"

    elif [ "${0%/*}" = "$0" ]; then

        # We've been invoked by the interpreter as, say, bash program
        if [ -r "$0" ]; then
            pwd -P
        # Clutching at straws; probably run via a download, anonymous script, etc, weird execve, etc
        else
            printf '\n'
        fi

    else

        # We've been invoked with a relative or absolute path (also when invoked via PATH in a shell)

        _program_path_find_parentPath()
        {
            parentPath="${scriptPath%/*}"
            if [ -z "$parentPath" ]; then
                parentPath='/'
            fi
            cd "$parentPath" 1>/dev/null
        }

        # pdksh / mksh have problems with unsetting a variable that was never set...
        if [ "${CDPATH+set}" = 'set' ]; then
            unset CDPATH
        fi

        if command -v realpath 1>/dev/null 2>/dev/null; then
            (
                scriptPath="$(realpath "$0")"

                _program_path_find_parentPath
                pwd -P
            )
        elif command -v readlink 1>/dev/null 2>/dev/null; then
            (
                scriptPath="$0"

                while [ -L "$scriptPath" ]
                do
                    _program_path_find_parentPath
                    scriptPath="$(readlink "$scriptPath")"
                done

                _program_path_find_parentPath
                pwd -P
            )
        else
            # This approach will fail in corner cases where the script itself is a symlink in a path not parallel with the concrete script
            (
                scriptPath="$0"

                _program_path_find_parentPath
                pwd -P
            )
        fi

    fi
}

_program_commandLine_parseInitialise()
{
	javabuild_projectPath_default="${_program_path}"/..
}

_program_commandLine_helpMessage()
{
    _program_commandLine_helpMessage_usage="[OPTION]... -- [modules]..."
    _program_commandLine_helpMessage_description="Compiles Java modules"
    _program_commandLine_helpMessage_options="
  -p, --project-path PATH     PATH to the project's home
                              Defaults to:-
                              ${javabuild_projectPath_default}
  -m, --module-path PATH      PATH to find modules in.
                              Defaults to:-
                              PROJECT-PATH/source
  -o, --output-path PATH      PATH to output to.
                              Defaults to:-
                              PROJECT-PATH/out/${_program_name}"
    _program_commandLine_helpMessage_optionsSpacing='     '
    _program_commandLine_helpMessage_configurationKeys="
  javabuild_projectPath  Equivalent to --project-path
  javabuild_modulePath   Equivalent to --module-path
  javabuild_outputPath   Equivalent to --output-path
"
    _program_commandLine_helpMessage_examples="
  ${_program_name} -o /some/path
"
}

_program_commandLine_optionExists()
{
    case "$optionName" in

        p|project-path)
            echo 'yes-argumented'
        ;;

        m|module-path)
            echo 'yes-argumented'
        ;;

        o|output-path)
            echo 'yes-argumented'
        ;;

        *)
            echo 'no'
        ;;

    esac
}

_program_commandLine_processOptionWithArgument()
{
    case "$optionName" in

        p|project-path)
            core_validate_folderPathReadableAndSearchable $core_commandLine_exitCode_USAGE 'option' "$optionNameIncludingHyphens" "$optionValue"
            javabuild_projectPath="$optionValue"
        ;;

        m|module-path)
            core_validate_folderPathReadableAndSearchable $core_commandLine_exitCode_USAGE 'option' "$optionNameIncludingHyphens" "$optionValue"
            javabuild_modulePath="$optionValue"
        ;;

        o|output-path)
            core_validate_folderPathIsReadableAndSearchableAndWritableOrCanBeCreated $core_commandLine_exitCode_USAGE 'option' "$optionNameIncludingHyphens" "$optionValue"
            javabuild_outputPath="$optionValue"
        ;;

    esac
}

_program_commandLine_handleNonOptions()
{
    core_variable_array_initialise javabuild_moduleNames

    local moduleName
    for moduleName in "$@"
    do
        core_variable_array_append javabuild_moduleNames "$moduleName"
    done

    if core_variable_array_isEmpty javabuild_moduleNames; then
        core_exitError $core_commandLine_exitCode_USAGE "You haven't specified any module names - are you sure this is what you wanted?"
    fi
}

_program_commandLine_validate()
{
    if core_variable_isSet javabuild_projectPath; then
        core_validate_folderPathReadableAndSearchable $core_commandLine_exitCode_CONFIG 'configuration setting' 'javabuild_projectPath' "$javabuild_projectPath"
    else
        core_message INFO "Defaulting --project-path to ${javabuild_projectPath_default}"
        javabuild_projectPath="${javabuild_projectPath_default}"
    fi
	
	if ! core_path_isReadableAndSearchableFolderPath "$javabuild_projectPath"/.idea/libraries; then
		core_exitError $core_commandLine_exitCode_CONFIG "There is no .idea/libraries folder under --project-path '$javabuild_projectPath'"
	fi
	
    if core_variable_isSet javabuild_modulePath; then
        core_validate_folderPathReadableAndSearchable $core_commandLine_exitCode_CONFIG 'configuration setting' 'javabuild_modulePath' "$javabuild_modulePath"
    else
        core_message INFO "Defaulting --module-path to ${javabuild_projectPath}/source"
        javabuild_modulePath="${javabuild_projectPath}/source"
    fi
	
    if core_variable_isSet javabuild_outputPath; then
        core_validate_folderPathIsReadableAndSearchableAndWritableOrCanBeCreated $core_commandLine_exitCode_CONFIG 'configuration setting' 'javabuild_outputPath' "$javabuild_outputPath"
    else
        core_message INFO "Defaulting --output-path to ${javabuild_projectPath}/out/$_program_name"
        javabuild_outputPath="${javabuild_projectPath}/out/$_program_name"
    fi
}

_program_name='javabuild'
_program_version='unversioned'
_program_package_or_build=''
_program_path="$(_program_path_find)"
_program_libPath="${_program_path}/lib"
_program_etcPath="${_program_path}/etc"
_program_varPath="${_program_path}/var"
_program_entrypoint='javabuild'


# Assumes pwd, and so requires this code to be running from this folder
. "$_program_libPath"/shellfire/core/init.functions "$@"
